<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ASPxEditorsStringId.DefaultErrorText" xml:space="preserve">
    <value>Invalid value</value>
  </data>
  <data name="ASPxEditorsStringId.RegExValidationErrorText" xml:space="preserve">
    <value>Regular expression validation failed</value>
  </data>
  <data name="ASPxEditorsStringId.RequiredFieldErrorText" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="ASPxEditorsStringId.Calendar_Today" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="ASPxEditorsStringId.Calendar_Clear" xml:space="preserve">
    <value>حذف</value>
  </data>
  <data name="ASPxEditorsStringId.Calendar_OK" xml:space="preserve">
    <value>تایید</value>
  </data>
  <data name="ASPxEditorsStringId.Calendar_Cancel" xml:space="preserve">
    <value>انصراف</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_OK" xml:space="preserve">
    <value>تایید</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_Cancel" xml:space="preserve">
    <value>انصراف</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_GroupType" xml:space="preserve">
    <value>And,Or,Not And,Not Or</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_ClauseType" xml:space="preserve">
    <value>برابر,نابرابر,بزرگتراز,بزرگتر مساوي,کوچکتراز,کوچکتر مساوي,در میان,خارج از,شامل,شامل نباشد,شروع با,خاتمه با,مانند,متفاوت با,خالي,خالي نباشد,هر کدام از,هيچ يک از</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_BetweenAnd" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_Not" xml:space="preserve">
    <value>Not</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_AddConditionHint" xml:space="preserve">
    <value>اضافه کردن شرط به گروه</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_RemoveConditionHint" xml:space="preserve">
    <value>حذف شرط</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_AddValueHint" xml:space="preserve">
    <value>اضافه کردن آیتم به لیست</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_ClearFilter" xml:space="preserve">
    <value>حذف فیلتر</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_ShowFilterControl" xml:space="preserve">
    <value>ایجاد فیلتر</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_AddGroup" xml:space="preserve">
    <value>اضافه کردن گروه</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_AddCondition" xml:space="preserve">
    <value>اضافه کردن شرط</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_Remove" xml:space="preserve">
    <value>حذف</value>
  </data>
  <data name="ASPxEditorsStringId.FilterConrol_Empty" xml:space="preserve">
    <value>&amp;lt;خالی&amp;gt;</value>
  </data>
  <data name="ASPxEditorsStringId.FilterConrol_EmptyEnter" xml:space="preserve">
    <value>&amp;lt;وارد کردن اطلاعات&amp;gt;</value>
  </data>
  <data name="ASPxEditorsStringId.FilterControl_PopupHeaderText" xml:space="preserve">
    <value>ایجاد فیلتر</value>
  </data>
  <data name="ASPxEditorsStringId.Captcha_DefaultImageAlternateText" xml:space="preserve">
    <value>Captcha image</value>
  </data>
  <data name="ASPxEditorsStringId.Captcha_RefreshText" xml:space="preserve">
    <value>Show another code</value>
  </data>
  <data name="ASPxEditorsStringId.Captcha_DefaultErrorText" xml:space="preserve">
    <value>The submitted code is incorrect</value>
  </data>
  <data name="ASPxEditorsStringId.Captcha_DefaultTextBoxLabelText" xml:space="preserve">
    <value>Type the code shown:</value>
  </data>
  <data name="ASPxEditorsStringId.CheckBox_Checked" xml:space="preserve">
    <value>انتخاب</value>
  </data>
  <data name="ASPxEditorsStringId.CheckBox_Unchecked" xml:space="preserve">
    <value>عدم انتخاب</value>
  </data>
  <data name="ASPxEditorsStringId.CheckBox_Undefined" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="ASPxEditorsStringId.TrackBar_Increment" xml:space="preserve">
    <value>Increment</value>
  </data>
  <data name="ASPxEditorsStringId.TrackBar_Decrement" xml:space="preserve">
    <value>Decrement</value>
  </data>
  <data name="ASPxEditorsStringId.TrackBar_Drag" xml:space="preserve">
    <value>Drag</value>
  </data>
</root>