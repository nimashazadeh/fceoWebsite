using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using DevExpress.Web;

public partial class Members_TechnicalServices_Capacity_EngOCapacity : System.Web.UI.Page
{
    string EngOId;

    protected void Page_Load(object sender, EventArgs e)
    {
        this.DivReport.Attributes.Add("onclick", "ChangeVisible(this)");
        this.DivReport.Attributes.Add("onmouseover", "ChangeIcon(this)");
        this.DivReport.Visible = false;


        if (!IsPostBack)
        {
            if ((string.IsNullOrEmpty(Request.QueryString["EngOId"])))
            {
                Response.Redirect("CapacityInfo.aspx");
                return;
            }

            SetKeys();
        }
        ASPxComboBoxYear_SelectedIndexChanged(sender, e);
    }

    protected void btnBack_Click(object sender, EventArgs e)
    {
        Response.Redirect("CapacityInfo.aspx");
    }


    /*******************************************************************************************************************************************/
    private void SetKeys()
    {
        try
        {
            PkEngOId.Value = Server.HtmlDecode(Request.QueryString["EngOId"]).ToString();
        }
        catch
        {
            this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
            return;
        }

        EngOId = Utility.DecryptQS(PkEngOId.Value);

        if (string.IsNullOrEmpty(EngOId))
        {
            this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());

            return;
        }

        ASPxComboBoxYear.Value = Utility.GetYearOfToday();
        //SetValues(Utility.GetYearOfToday());
    }

    private void SetValues(string Year)
    {
        Capacity Cpcty = new Capacity();
        ArrayList CapacityInfoArr = new ArrayList();
        ArrayList MemberArr = new ArrayList();

        SetDesignCapacity(CapacityInfoArr, Cpcty, Year);
        FillMemberGrid(MemberArr, Cpcty, Year);
        FillDsgnGrid(Cpcty, Year);
        FillMemberStepsGrid(Cpcty, Year);
    }

    private void SetDesignCapacity(ArrayList CapacityInfoArr, Capacity Cpcty, string Year)
    {
        EngOId = Utility.DecryptQS(PkEngOId.Value);
        if (Convert.ToInt32(EngOId) > 0)
        {
            // CapacityInfoArr -----> ArrayList[0]: TotalCapacity(int), ArrayList[1]:UsedCapacity(int) , ArrayList[2]: RemainCapacity(int), 
            //                        ArrayList[3]:ReservedCapacity(int) , ArrayList[4]: ProjectNum(int), ArrayList[5]: MaxJoubCount(int),
            //                        ArrayList[6]:MaxFloor(string), ArrayList[7]:ConditionalCapacity(int)


            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //CapacityInfoArr = Cpcty.GetCapacityInformationInYear((int)TSP.DataManager.TSProjectIngridientType.Designer, (int)TSP.DataManager.TSMemberType.EngOffice, Convert.ToInt32(EngOId), Year);

            //if (CapacityInfoArr.Count > 0)
            //{
            //    SetDsgTexts(CapacityInfoArr[0].ToString(), CapacityInfoArr[5].ToString(), CapacityInfoArr[1].ToString(), CapacityInfoArr[2].ToString(), CapacityInfoArr[3].ToString(), CapacityInfoArr[4].ToString(), CapacityInfoArr[7].ToString());
            //}
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
        }
    }

    private void SetDsgTexts(string TotalCapacity, string MaxJobCount, string TotalUsed, string RemainCapacity, string Reserve, string ProjectCount, string ConditionalCapacity)
    {
        ASPxTextBoxDsgTotalCapacity.Text = TotalCapacity;
        ASPxTextBoxDsgMaxJobCount.Text = MaxJobCount;
        ASPxTextBoxDsgTotalUsed.Text = TotalUsed;
        ASPxTextBoxDsgRemainCapacity.Text = RemainCapacity;
        ASPxTextBoxDsgReserve.Text = Reserve;
        ASPxTextBoxDsgProjectCount.Text = ProjectCount;
        ASPxTextBoxConditionalCapacity.Text = ConditionalCapacity;
    }

    private void FillMemberGrid(ArrayList MemberArr, Capacity Cpcty, string Year)
    {
        DataTable MemberDt = new DataTable();
        MemberDt.Columns.Add("MaxJobCount");
        MemberDt.Columns.Add("MaxJobCapacity");
        MemberDt.Columns.Add("TotalDsgCapacity");
        MemberDt.Columns.Add("Factor");
        MemberDt.Columns.Add("MjId");
        MemberDt.Columns.Add("GrdId");
        MemberDt.Columns.Add("MeId");
        MemberDt.Columns.Add("MeName");

        EngOId = Utility.DecryptQS(PkEngOId.Value);
        if (Convert.ToInt32(EngOId) > 0)
        {
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            //یکی از پارامتر ها مقدار داده نشده بود برای برطرف کردن موقتی -1 داده شد
            //MemberArr = Cpcty.GetOfficeMembersDsgObsCapacityInYear(Convert.ToInt32(EngOId), (int)TSP.DataManager.TSProjectIngridientType.Designer, (int)TSP.DataManager.DocOffIncreaseJobCapacityType.EngOffice,-1, Year);
            //???????????????????????????
            //???????????????????????????
            //???????????????????????????
            for (int i = 0; i < MemberArr.Count; i++)
            {
                MemberDt.Rows.Add(InsertMemberRow(MemberDt.NewRow(), (ArrayList)MemberArr[i]));
            }
        }

        //MemberDt.DefaultView.Sort        
        CustomAspxDevGridViewMembers.DataSource = MemberDt;
        CustomAspxDevGridViewMembers.DataBind();
    }

    private DataRow InsertMemberRow(DataRow dr, ArrayList MembersArr)
    {
        // MembersArr -------> ArrayList[0]: MaxJobCount, ArrayList[1]: MaxJobCapacity, ArrayList[2]: ObservationPercent, ArrayList[3]: ObservationCapacity,
        //                     ArrayList[4]: Grade, ArrayList[5]: MjId, ArrayList[6]: GradeInOfficeLicense, ArrayList[7]: DesignInc, ArrayList[8]: SameGradeInc, 
        //                     ArrayList[9]: MajorInc, ArrayList[10]: TotalDsgCapacity, ArrayList[11]: TotalObsCapacity, ArrayList[12]: MeId, ArrayList[13]: MeName

        dr["MaxJobCount"] = MembersArr[0];
        dr["MaxJobCapacity"] = MembersArr[1];
        dr["MjId"] = MembersArr[5];
        dr["GrdId"] = MembersArr[6];
        dr["MeId"] = MembersArr[12];
        dr["MeName"] = MembersArr[13];
        dr["TotalDsgCapacity"] = MembersArr[10];
        dr["Factor"] = Convert.ToDouble(MembersArr[10]) / Convert.ToDouble(MembersArr[1]);

        return dr;
    }

    private void FillDsgnGrid(Capacity Cpcty, string Year)
    {
        EngOId = Utility.DecryptQS(PkEngOId.Value);
        //???????????????
        //DataTable DsgnDt = Cpcty.GetYearStagesInformation((int)TSP.DataManager.TSProjectIngridientType.Designer, (int)TSP.DataManager.TSMemberType.EngOffice, Convert.ToInt32(EngOId), Year);      
        //CustomAspxDevGridViewDsgn.DataSource = DsgnDt;
        //CustomAspxDevGridViewDsgn.DataBind();
        //???????????????
    }

    private void FillMemberStepsGrid(Capacity Cpcty, string Year)
    {
        EngOId = Utility.DecryptQS(PkEngOId.Value);

        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //یکی از پارامتر ها مقدار داده نشده بود برای برطرف کردن موقتی -1 داده شد
        //???????????????
       // DataTable MembersStepsDt = Cpcty.GetGetOfficeMembersYearStagesInformation((int)TSP.DataManager.TSProjectIngridientType.Designer, (int)TSP.DataManager.TSMemberType.EngOffice, Convert.ToInt32(EngOId),-1, Year);
        //???????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????
       // CustomAspxDevGridViewMembersSteps.DataSource = MembersStepsDt;
        //???????????????
        CustomAspxDevGridViewMembersSteps.DataBind();

        //((TSP.WebControls.CustomAspxDevGridView)CustomAspxDevGridViewDsgn.FindDetailRowTemplateControl(CustomAspxDevGridViewDsgn.FocusedRowIndex, "CustomAspxDevGridViewMembersSteps")).DataSource = MembersStepsDt;
        //((TSP.WebControls.CustomAspxDevGridView)CustomAspxDevGridViewDsgn.FindDetailRowTemplateControl(CustomAspxDevGridViewDsgn.FocusedRowIndex, "CustomAspxDevGridViewMembersSteps")).DataBind();
    }

    private void SetComponents()
    {
        TSP.DataManager.TechnicalServices.CapacityAssignmentManager CapacityAssignmentManager = new TSP.DataManager.TechnicalServices.CapacityAssignmentManager();
        CapacityAssignmentManager.FindLastStageInYear("");

        if (ASPxComboBoxYear.Value.ToString() == Utility.GetYearOfToday() || CapacityAssignmentManager.Count == 0 || ASPxComboBoxYear.Value.ToString() == CapacityAssignmentManager[0]["Year"].ToString())
        {
            LabelDsgnRemain.Visible = true;
            LableDsgnWaste.Visible = false;

            LableDsgnReserved.Visible = true;
            ASPxTextBoxDsgReserve.Visible = true;

            CustomAspxDevGridViewDsgn.Columns["RemainCapacity"].Caption = "ظرفیت باقیمانده";
            CustomAspxDevGridViewMembersSteps.Columns["RemainCapacity"].Caption = "ظرفیت باقیمانده";
        }
        else
        {
            LabelDsgnRemain.Visible = false;
            LableDsgnWaste.Visible = true;

            LableDsgnReserved.Visible = false;
            ASPxTextBoxDsgReserve.Visible = false;

            CustomAspxDevGridViewDsgn.Columns["RemainCapacity"].Caption = "ظرفیت سوخت شده";
            CustomAspxDevGridViewMembersSteps.Columns["RemainCapacity"].Caption = "ظرفیت سوخت شده";
        }
    }

    private DataTable SetDatasource(string Year)
    {
        Capacity Cpcty = new Capacity();
        EngOId = Utility.DecryptQS(PkEngOId.Value);

        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //یکی از پارامتر ها مقدار داده نشده بود برای برطرف کردن موقتی -1 داده شد
        //???????????????
        //DataTable MembersStepsDt = Cpcty.GetGetOfficeMembersYearStagesInformation((int)TSP.DataManager.TSProjectIngridientType.Designer, (int)TSP.DataManager.TSMemberType.EngOffice, Convert.ToInt32(EngOId),-1, Year);
        //???????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????????????????
        //???????????????
        //MembersStepsDt.DefaultView.RowFilter = "CapacityAssignmentId=" + Session["CapacityAssignmentId"];
        //???????????????
        DataTable MembersStepsDt = new DataTable();
        return MembersStepsDt;
    }

    /*****************************************************************************************************************************/
    protected void CustomAspxDevGridViewDsgn_FocusedRowChanged(object sender, EventArgs e)
    {
        if (CustomAspxDevGridViewDsgn.FocusedRowIndex != -1 && CustomAspxDevGridViewDsgn.SettingsDetail.ShowDetailRow)
            CustomAspxDevGridViewDsgn.DetailRows.ExpandRow(CustomAspxDevGridViewDsgn.FocusedRowIndex);
    }

    protected void CustomAspxDevGridViewDsgn_DetailRowExpandedChanged(object sender, DevExpress.Web.ASPxGridViewDetailRowEventArgs e)
    {
        CustomAspxDevGridViewDsgn.FocusedRowIndex = e.VisibleIndex;
    }

    protected void CustomAspxDevGridViewMembersSteps_BeforePerformDataSelect(object sender, EventArgs e)
    {
       // Session["CapacityAssignmentId"] = (sender as ASPxGridView).GetMasterRowKeyValue();
    }

    protected void ASPxComboBoxYear_SelectedIndexChanged(object sender, EventArgs e)
    {
        SetComponents();
        SetValues(ASPxComboBoxYear.Value.ToString());
    }
}