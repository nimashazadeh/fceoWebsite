using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using DevExpress.Web;

public partial class Members_Amoozesh_Periods : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        //if (Session["Login"] == null || Session["Login"].ToString() == "0")
        //{
        //    Response.Redirect("../../Login.aspx?ReferPage=" + Request.Url.AbsoluteUri);
        //    return;
        //}
        this.DivReport.Visible = false;
        this.DivReport.Attributes.Add("onclick", "ChangeVisible(this)");
        this.DivReport.Attributes.Add("onmouseover", "ChangeIcon(this)");

        if (!IsPostBack)
        {
            //TSP.DataManager.Permission per = TSP.DataManager.OpinionsManager.GetUserPermission(int.Parse(Session["Login"].ToString()), (TSP.DataManager.UserType)int.Parse(Session["LoginType"].ToString()));
            //btnOpininon.Enabled = false;
            //btnOpinion1.Enabled = false;


            //if (string.IsNullOrEmpty(Request.QueryString["MeId"]))
            //{
            //    Response.Redirect("~/Members/MemberHome.aspx");
            //}
            //MemberId.Value = Server.HtmlDecode(Request.QueryString["MeId"].ToString());
            //string MeId = Utility.DecryptQS(MemberId.Value);

            string MeId = Utility.GetCurrentUser_MeId().ToString();
          
            if (string.IsNullOrEmpty(MeId))
            {
                this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                return;
            }
            MemberId.Value = Utility.EncryptQS(MeId);

            OdbPeriod.SelectParameters[0].DefaultValue = MeId;

            CustomAspxDevGridView1.DataBind();
            if (CustomAspxDevGridView1.VisibleRowCount == 0)
            {
                btnOpininon.Enabled = false;
                btnOpinion1.Enabled = false;
                btnView.Enabled = false;
                btnView1.Enabled = false;
            }
        }
    }
    protected void btnOpininon_Click(object sender, EventArgs e)
    {
        int PPId = -1;
        int InsId = -1;

        if (CustomAspxDevGridView1.FocusedRowIndex > -1)
        {
            DataRow row = CustomAspxDevGridView1.GetDataRow(CustomAspxDevGridView1.FocusedRowIndex);
            PPId = (int)row["PeriodId"];
            InsId = (int)row["InsId"];

        }
        if (PPId == -1)
        {
            this.DivReport.Visible = true;
            this.LabelWarning.Text = "لطفاً ابتدا یک رکورد را انتخاب نمائید";

        }
        else
        {
            Response.Redirect("PeriodOpinionForm.aspx?PPId=" + Utility.EncryptQS(PPId.ToString()) + "&MeId=" + MemberId.Value );
        }
    }
    protected void btnView_Click(object sender, EventArgs e)
    {
        int PPId = -1;
        int InsId = -1;

        if (CustomAspxDevGridView1.FocusedRowIndex > -1)
        {
            DataRow row = CustomAspxDevGridView1.GetDataRow(CustomAspxDevGridView1.FocusedRowIndex);
            PPId = (int)row["PeriodId"];
            InsId = (int)row["InsId"];

        }
        if (PPId == -1)
        {
            this.DivReport.Visible = true;
            this.LabelWarning.Text = "لطفاً برای مشاهده اطلاعات ابتدا یک رکورد را انتخاب نمائید";

        }
        else
        {
            Response.Redirect("PeriodsView.aspx?PPId=" + Utility.EncryptQS(PPId.ToString()) + "&InsId=" + Utility.EncryptQS(InsId.ToString()) + "&RetPage=" + Utility.EncryptQS(""));
        }
    }
    protected void btnBack_Click(object sender, EventArgs e)
    {
        Response.Redirect("~/Members/MemberHome.aspx?MeId=" + MemberId.Value);

    }
    protected void CustomAspxDevGridView1_HtmlDataCellPrepared(object sender, ASPxGridViewTableDataCellEventArgs e)
    {
        if ( e.DataColumn.FieldName == "StartDate" || e.DataColumn.FieldName == "EndDate")
            e.Cell.Style["direction"] = "ltr";

    }

    protected void CustomAspxDevGridView1_AutoFilterCellEditorInitialize(object sender, ASPxGridViewEditorEventArgs e)
    {
        if ( e.Column.FieldName == "StartDate" || e.Column.FieldName == "EndDate")
            e.Editor.Style["direction"] = "ltr";
    }
}
