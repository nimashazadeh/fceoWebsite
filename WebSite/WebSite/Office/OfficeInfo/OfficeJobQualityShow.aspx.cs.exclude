using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.IO;
using DevExpress.Web;

public partial class Office_OfficeInfo_OfficeJobQualityShow : System.Web.UI.Page
{
    private bool IsPageRefresh = false;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            ViewState["postids"] = System.Guid.NewGuid().ToString();
            Session["postid"] = ViewState["postids"].ToString();
        }
        else
        {
            if (!IsCallback && Session["postid"] != null)
            {
                if (ViewState["postids"].ToString() != Session["postid"].ToString()) { IsPageRefresh = true; }
                Session["postid"] = System.Guid.NewGuid().ToString(); ViewState["postids"] = Session["postid"];
            }
        }

        btnEdit.Enabled = false;
        btnEdit2.Enabled = false;

        this.DivReport.Visible = false;
        this.DivReport.Attributes.Add("onclick", "ChangeVisible(this)");
        this.DivReport.Attributes.Add("onmouseover", "ChangeIcon(this)");

        if (!IsPostBack)
        {
            Session["JobQUpload"] = null;

            if (string.IsNullOrEmpty(Request.QueryString["JhId"]) || string.IsNullOrEmpty(Request.QueryString["JhqId"]))
            {
                Response.Redirect("Office1.aspx");
                return;
            }

            OdbFactorDocuments.FilterParameters[0].DefaultValue = "2";

            try
            {
                PgMode.Value = Server.HtmlDecode(Request.QueryString["JPageMode"].ToString());
                OfficeId.Value = Server.HtmlDecode(Request.QueryString["OfId"]).ToString();
                JobId.Value = Server.HtmlDecode(Request.QueryString["JhId"]).ToString();
                OfficeRequest.Value = Server.HtmlDecode(Request.QueryString["OfReId"]).ToString();
                JhQualityId.Value = Server.HtmlDecode(Request.QueryString["JhqId"]).ToString();
                HDMode.Value = Server.HtmlDecode(Request.QueryString["Dprt"]).ToString();
            }
            catch
            {
                this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                return;
            }

            string PageMode = Utility.DecryptQS(PgMode.Value);
            string OfId = Utility.DecryptQS(OfficeId.Value);
            string JhId = Utility.DecryptQS(JobId.Value);
            string OfReId = Utility.DecryptQS(OfficeRequest.Value);
            string JhqId = Utility.DecryptQS(JhQualityId.Value);
            string Mode = Utility.DecryptQS(HDMode.Value);

            if (string.IsNullOrEmpty(PageMode) || string.IsNullOrEmpty(JhqId))
            {
                this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                return;
            }


            TSP.DataManager.OfficeManager OfManager = new TSP.DataManager.OfficeManager();
            OfManager.FindByCode(int.Parse(OfId));
            if (OfManager.Count > 0)
                lblOfName.Text = OfManager[0]["OfName"].ToString();

            TSP.DataManager.OfficeRequestManager ReqManager = new TSP.DataManager.OfficeRequestManager();
            switch (PageMode)
            {
                case "View":
                    Disable();
                    flp.Visible = false;
                    hpFilePath.Visible = true;
                    if (string.IsNullOrEmpty(JhqId))
                    {
                        this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                        return;
                    }
                    btnSave.Enabled = false;
                    btnSave2.Enabled = false;
                    FillForm(int.Parse(JhqId));
                    ASPxRoundPanel2.HeaderText = "مشاهده";
                    TSP.DataManager.ProjectJobHistoryManager JhManager = new TSP.DataManager.ProjectJobHistoryManager();
                    if (!string.IsNullOrEmpty(JhId))
                    {
                        JhManager.FindByCode(int.Parse(JhId));
                        if (JhManager.Count == 1)
                        {
                            if (JhManager[0]["TableId"].ToString() != OfReId)
                            {
                                BtnNew.Enabled = false;
                                BtnNew2.Enabled = false;
                                btnEdit.Enabled = false;
                                btnEdit2.Enabled = false;
                            }
                        }
                    }
                    break;
                case "New":
                    btnEdit2.Enabled = false;
                    btnEdit.Enabled = false;
                    ASPxRoundPanel2.HeaderText = "جدید";
                    break;
                case "Edit":
                    btnEdit2.Enabled = false;
                    btnEdit.Enabled = false;

                    if (string.IsNullOrEmpty(JhqId))
                    {
                        this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                        return;
                    }
                    hpFilePath.Visible = true;
                    FillForm(int.Parse(JhqId));
                    ASPxRoundPanel2.Enabled = true;
                    ASPxRoundPanel2.HeaderText = "ویرایش";
                    break;
            }
            switch (Mode)
            {
                case "Home":
                    btnEdit.Enabled = false;
                    btnEdit2.Enabled = false;
                    BtnNew.Enabled = false;
                    BtnNew2.Enabled = false;
                    btnSave.Enabled = false;
                    btnSave2.Enabled = false;
                    break;

                case "Document":
                    ReqManager.FindByCode(int.Parse(OfReId));
                    if (ReqManager.Count > 0)
                    {
                        if (Convert.ToBoolean(ReqManager[0]["Requester"]) || (ReqManager[0]["IsConfirm"].ToString() != "0"))
                        {
                            BtnNew.Enabled = false;
                            BtnNew2.Enabled = false;
                            btnSave.Enabled = false;
                            btnSave2.Enabled = false;
                            btnEdit.Enabled = false;
                            btnEdit2.Enabled = false;
                        }
                    }
                    TSP.DataManager.ProjectJobHistoryManager JobManager = new TSP.DataManager.ProjectJobHistoryManager();
                    if (!string.IsNullOrEmpty(JhId))
                    {
                        JobManager.FindByCode(int.Parse(JhId));
                        if (JobManager.Count == 1)
                        {
                            if (JobManager[0]["TableId"].ToString() != OfReId)
                            {
                                BtnNew.Enabled = false;
                                BtnNew2.Enabled = false;
                                btnSave.Enabled = false;
                                btnSave2.Enabled = false;
                                btnEdit.Enabled = false;
                                btnEdit2.Enabled = false;

                            }
                        }
                    }
                    break;
                case "Membership":
                    btnEdit.Enabled = false;
                    btnEdit2.Enabled = false;
                    BtnNew.Enabled = false;
                    BtnNew2.Enabled = false;
                    btnSave.Enabled = false;
                    btnSave2.Enabled = false;
                    break;
            }

            this.ViewState["BtnSave"] = btnSave.Enabled;
            this.ViewState["BtnEdit"] = btnEdit.Enabled;
            this.ViewState["BtnNew"] = BtnNew.Enabled;

        }
        if (this.ViewState["BtnSave"] != null)
            this.btnSave.Enabled = this.btnSave2.Enabled = (bool)this.ViewState["BtnSave"];
        if (this.ViewState["BtnEdit"] != null)
            this.btnEdit.Enabled = this.btnEdit2.Enabled = (bool)this.ViewState["BtnEdit"];
        if (this.ViewState["BtnNew"] != null)
            this.BtnNew.Enabled = this.BtnNew2.Enabled = (bool)this.ViewState["BtnNew"];
    }
    protected void Enable()
    {
        txtJhDesc.Enabled = true;
        flp.Enabled = true;
        CmbName.Enabled = true;



    }
    protected void Disable()
    {
        txtJhDesc.Enabled = false;
        flp.Enabled = false;
        CmbName.Enabled = false;


    }
    protected void ClearForm()
    {
        txtJhDesc.Text = "";
        CmbName.DataBind();
        CmbName.SelectedIndex = -1;

        HDFlpMember.Set("name", "0");


    }
    protected void FillForm(int JhqId)
    {
        TSP.DataManager.DocOffJobHistoryQualityManager JhqManager = new TSP.DataManager.DocOffJobHistoryQualityManager();
        JhqManager.FindByCode(JhqId);
        if (JhqManager.Count > 0)
        {
            txtJhDesc.Text = JhqManager[0]["Description"].ToString();
            if (!Utility.IsDBNullOrNullValue(JhqManager[0]["OfdId"]))
            {
                CmbName.DataBind();
                CmbName.SelectedIndex = CmbName.Items.IndexOfValue(int.Parse(JhqManager[0]["OfdId"].ToString()));
                HDComboName.Value = CmbName.Value.ToString();
            }
            if (!Utility.IsDBNullOrNullValue(JhqManager[0]["FilePath"]))
            {
                hpFilePath.NavigateUrl = JhqManager[0]["FilePath"].ToString();
                HDFlpMember["name"] = 1;

            }

        }
        else
        {
            this.DivReport.Visible = true;
            this.LabelWarning.Text = "امکان مشاهده اطلاعات وجود ندارد ";
        }
    }
    protected void btnBack_Click(object sender, EventArgs e)
    {
        Response.Redirect("OfficeJobQuality.aspx?OfId=" + OfficeId.Value + "&PageMode=" + Request.QueryString["PageMode"] 
            + "&aPageMode=" + Request.QueryString["aPageMode"] + "&OfReId=" + OfficeRequest.Value + "&JhId=" + JobId.Value + "&Dprt=" + HDMode.Value);
    }
    protected void btnEdit_Click(object sender, EventArgs e)
    {
        string JhqId = Utility.DecryptQS(JhQualityId.Value);

        if (string.IsNullOrEmpty(JhqId))
        {
            this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());

            return;
        }
        else
        {

            Enable();
            flp.Visible = true;

            btnSave.Enabled = true;
            btnSave2.Enabled = true;
            this.ViewState["BtnSave"] = btnSave.Enabled;

            PgMode.Value = Utility.EncryptQS("Edit");
            ASPxRoundPanel2.HeaderText = "ویرایش";

        }

    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        if (IsPageRefresh)
            return;

        string PageMode = Utility.DecryptQS(PgMode.Value);
        string JhqId = Utility.DecryptQS(JhQualityId.Value);
        string OfId = Utility.DecryptQS(OfficeId.Value);

        if (string.IsNullOrEmpty(PageMode))
        {
            this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
            return;
        }
        TSP.DataManager.OfficeManager OfManager = new TSP.DataManager.OfficeManager();
        OfManager.FindByCode(int.Parse(OfId));
        if ((bool)OfManager[0]["IsLock"] == true)
        {
            TSP.DataManager.LockHistoryManager lockHistoryManager = new TSP.DataManager.LockHistoryManager();
            string OfficeLockers = lockHistoryManager.FindLockers(Utility.GetCurrentUser_MeId(), 1, 1);

            string lockers = Utility.GetFormattedObject(OfficeLockers);
            this.DivReport.Visible = true;
            this.LabelWarning.Text = "به دلیل قفل بودن وضعیت عضویت شما توسط  " + lockers + " امکان ثبت اطلاعات وجود ندارد.";
            return;
        }

        switch (PageMode)
        {
            case "New":
                Insert();
                break;
            case "Edit":

                if (string.IsNullOrEmpty(JhqId))
                {
                    this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                    return;
                }
                else
                    Edit(int.Parse(JhqId));
                break;
        }
    }

    protected void Insert()
    {
        TSP.DataManager.DocOffJobHistoryQualityManager JobQualityManager = new TSP.DataManager.DocOffJobHistoryQualityManager();
        TSP.DataManager.DocOffJobHistoryQualityManager JobQualityManager2 = new TSP.DataManager.DocOffJobHistoryQualityManager();
        try
        {

            int JhId = int.Parse(Utility.DecryptQS(JobId.Value));

            JobQualityManager2.FindByJobCode(JhId);

            for (int i = 0; i < JobQualityManager2.Count; i++)
            {
                if (JobQualityManager2[i]["OfdId"].ToString() == CmbName.Value.ToString())
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "اطلاعات وارد شده تکراری می باشد";
                    return;
                }
            }

            DataRow drQ = JobQualityManager.NewRow();
            drQ["JhId"] = JhId;
            if (CmbName.Value != null)
                drQ["OfdId"] = CmbName.Value;
            drQ["Mark"] = DBNull.Value;
            drQ["FilePath"] = "~/Image/Office/JobQuality/" + Path.GetFileName(Session["JobQUpload"].ToString());
            drQ["CreateDate"] = Utility.GetDateOfToday();
            drQ["Description"] = txtJhDesc.Text;
            drQ["UserId"] = Utility.GetCurrentUser_UserId();
            drQ["ModifiedDate"] = DateTime.Now;
            JobQualityManager.AddRow(drQ);
            int imgcnt = JobQualityManager.Save();
            JobQualityManager.DataTable.AcceptChanges();
            if (imgcnt == 1)
            {
                hpFilePath.Visible = true;
                hpFilePath.NavigateUrl = JobQualityManager[0]["FilePath"].ToString();
                JhQualityId.Value = Utility.EncryptQS(JobQualityManager[0]["JhqId"].ToString());
                PgMode.Value = Utility.EncryptQS("Edit");
                ASPxRoundPanel2.HeaderText = "ویرایش";
                this.DivReport.Visible = true;
                this.LabelWarning.Text = " ذخیره انجام شد";
                HDComboName.Value = CmbName.Value.ToString();


            }
            else
            {
                this.DivReport.Visible = true;
                this.LabelWarning.Text = "خطایی در ذخیره انجام گرفته است";
            }
        }
        catch (Exception err)
        {

            if (err.GetType() == typeof(System.Data.SqlClient.SqlException))
            {
                System.Data.SqlClient.SqlException se = (System.Data.SqlClient.SqlException)err;
                if (se.Number == 2601)
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "اطلاعات تکراری می باشد";
                }
                else
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "خطایی در ذخیره انجام گرفته است";
                }
            }
            else
            {
                this.DivReport.Visible = true;
                this.LabelWarning.Text = "خطایی در ذخیره انجام گرفته است";
            }
        }
        try
        {
            if (Session["JobQUpload"] != null)
            {

                string ImgSoource = Server.MapPath("~/image/Temp/") + Path.GetFileName(Session["JobQUpload"].ToString());
                string ImgTarget = Server.MapPath("~/Image/Office/JobQuality/") + Path.GetFileName(Session["JobQUpload"].ToString());
                File.Copy(ImgSoource, ImgTarget, true);

            }
        }
        catch (Exception)
        { }


    }
    protected void Edit(int JhqId)
    {
        TSP.DataManager.DocOffJobHistoryQualityManager JobQualityManager = new TSP.DataManager.DocOffJobHistoryQualityManager();
        TSP.DataManager.DocOffJobHistoryQualityManager JobQualityManager2 = new TSP.DataManager.DocOffJobHistoryQualityManager();

        try
        {

            int JhId = int.Parse(Utility.DecryptQS(JobId.Value));

            JobQualityManager2.FindByJobCode(JhId);
            if (HDComboName == null && string.IsNullOrEmpty(HDComboName.Value))
            {
                this.Response.Redirect("~/ErrorPage.aspx?ErrorNo=" + ((int)ErrorCodes.ErrorType.PageInputsNotValid).ToString());
                return;
            }
            string SelectedOfdId = HDComboName.Value;
            for (int i = 0; i < JobQualityManager2.Count; i++)
            {
                if (JobQualityManager2[i]["OfdId"].ToString() == CmbName.Value.ToString() && SelectedOfdId != CmbName.Value.ToString())
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "اطلاعات وارد شده تکراری می باشد";
                    return;
                }
            }

            JobQualityManager.FindByCode(JhqId);
            if (JobQualityManager.Count > 0)
            {
                JobQualityManager[0].BeginEdit();
                if (CmbName.Value != null)
                    JobQualityManager[0]["OfdId"] = CmbName.Value;
                if (Session["JobQUpload"] != null)
                    JobQualityManager[0]["FilePath"] = "~/Image/Office/JobQuality/" + Path.GetFileName(Session["JobQUpload"].ToString());
                JobQualityManager[0]["Description"] = txtJhDesc.Text;
                JobQualityManager[0]["UserId"] = Utility.GetCurrentUser_UserId();
                JobQualityManager[0]["ModifiedDate"] = DateTime.Now;
                JobQualityManager[0].EndEdit();
                int imgcnt = JobQualityManager.Save();
                if (imgcnt == 1)
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = " ذخیره انجام شد";
                    HDComboName.Value = CmbName.Value.ToString();

                }
                else
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "خطایی در ذخیره انجام گرفته است";

                }
            }
            else
            {
                this.DivReport.Visible = true;
                this.LabelWarning.Text = "خطایی در بازخوانی اطلاعات رخ داده است";
            }

        }
        catch (Exception err)
        {

            if (err.GetType() == typeof(System.Data.SqlClient.SqlException))
            {
                System.Data.SqlClient.SqlException se = (System.Data.SqlClient.SqlException)err;
                if (se.Number == 2601)
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "اطلاعات تکراری می باشد";
                }
                else
                {
                    this.DivReport.Visible = true;
                    this.LabelWarning.Text = "خطایی در ذخیره انجام گرفته است";
                }
            }
            else
            {
                this.DivReport.Visible = true;
                this.LabelWarning.Text = "خطایی در ذخیره انجام گرفته است";
            }
        }
        try
        {
            if (Session["JobQUpload"] != null)
            {

                string ImgSoource = Server.MapPath("~/image/Temp/") + Path.GetFileName(Session["JobQUpload"].ToString());
                string ImgTarget = Server.MapPath("~/Image/Office/JobQuality/") + Path.GetFileName(Session["JobQUpload"].ToString());
                File.Copy(ImgSoource, ImgTarget, true);

            }
        }
        catch (Exception)
        { }

    }

    protected void BtnNew_Click(object sender, EventArgs e)
    {

        btnEdit2.Enabled = false;
        btnEdit.Enabled = false;
        btnSave.Enabled = true;
        btnSave2.Enabled = true;
        this.ViewState["BtnSave"] = btnSave.Enabled;
        this.ViewState["BtnEdit"] = btnEdit.Enabled;

        JhQualityId.Value = Utility.EncryptQS("");
        PgMode.Value = Utility.EncryptQS("New");
        ASPxRoundPanel2.HeaderText = "جدید";
        ClearForm();
        Enable();
        flp.Visible = true;
        hpFilePath.Visible = false;
    }

    protected void flp_FileUploadComplete(object sender, DevExpress.Web.FileUploadCompleteEventArgs e)
    {
        try
        {
            e.CallbackData = SaveImage(e.UploadedFile);
        }
        catch (Exception ex)
        {
            e.IsValid = false;
            e.ErrorText = ex.Message;
        }
    }
    protected string SaveImage(UploadedFile uploadedFile)
    {
        string ret = "";
        if (uploadedFile.IsValid)
        {
            do
            {
                FileInfo ImageType = new FileInfo(uploadedFile.PostedFile.FileName);
                ret = Path.GetRandomFileName() + ImageType.Extension;
            } while (File.Exists(MapPath("~/Image/Office/JobQuality/") + ret) == true || File.Exists(MapPath("~/Image/Temp/") + ret) == true);
            string tempFileName = MapPath("~/Image/Temp/") + ret;
            uploadedFile.SaveAs(tempFileName, true);
            Session["JobQUpload"] = tempFileName;
        }
        return ret;
    }
}
