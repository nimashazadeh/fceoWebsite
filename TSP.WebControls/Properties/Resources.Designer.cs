//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSP.WebControls.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TSP.WebControls.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function (s, e) {
        ///    if (s.GetText() == &apos;&apos;) return;
        ///
        ///    var InputFile = s.GetText();
        ///    var extension = new Array();
        ///
        ///    extension[0] = &quot;.gif&quot;;
        ///    extension[1] = &quot;.jpeg&quot;;
        ///    extension[2] = &quot;.jpg&quot;;
        ///    extension[3] = &quot;.png&quot;;
        ///    extension[4] = &quot;.bmp&quot;;
        ///    extension[5] = &quot;.zip&quot;;
        ///    extension[6] = &quot;.rar&quot;;
        ///    extension[7] = &quot;.txt&quot;;
        ///    extension[8] = &quot;.pdf&quot;;
        ///    extension[9] = &quot;.doc&quot;;
        ///    extension[10] = &quot;.docx&quot;;
        ///    extension[11] = &quot;.xls&quot;;
        ///    extension[12] = &quot;.xlsx&quot;;
        ///    extension[1 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CheckFileUploadForFiles {
            get {
                return ResourceManager.GetString("CheckFileUploadForFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function (s, e) {
        ///    if (s.GetText() == &apos;&apos;) return;
        ///
        ///    var InputFile = s.GetText();
        ///    var extension = new Array();
        ///
        ///    extension[0] = &quot;.gif&quot;;
        ///    extension[1] = &quot;.jpeg&quot;;
        ///    extension[2] = &quot;.jpg&quot;;
        ///    extension[3] = &quot;.png&quot;;
        ///    extension[4] = &quot;.bmp&quot;;
        ///    extension[5] = &quot;.zip&quot;;
        ///    extension[6] = &quot;.rar&quot;;
        ///    extension[7] = &quot;.txt&quot;;
        ///    extension[8] = &quot;.pdf&quot;;
        ///    extension[9] = &quot;.doc&quot;;
        ///    extension[10] = &quot;.docx&quot;;
        ///    extension[11] = &quot;.xls&quot;;
        ///    extension[12] = &quot;.xlsx&quot;;
        ///    extension[1 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CheckFileUploadForFiles_UploadWhenOK {
            get {
                return ResourceManager.GetString("CheckFileUploadForFiles_UploadWhenOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function (s, e) {
        ///    if (s.GetText() == &apos;&apos;) return;
        ///
        ///    var InputFile = s.GetText();
        ///    var extension = new Array();
        ///
        ///    extension[0] = &quot;.png&quot;;
        ///    extension[1] = &quot;.gif&quot;;
        ///    extension[2] = &quot;.jpg&quot;;
        ///    extension[3] = &quot;.jpeg&quot;;
        ///    extension[4] = &quot;.bmp&quot;;
        ///
        ///
        ///    var thisext = InputFile.substr(InputFile.lastIndexOf(&apos;.&apos;)).toLowerCase();
        ///    for (var i = 0; i &lt; extension.length; i++) {
        ///        if (thisext == extension[i]) { return; }
        ///    }
        ///    alert(&quot;شما مجاز به آپلود این فایل نیستید&quot;);
        ///    s [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CheckFileUploadForImages {
            get {
                return ResourceManager.GetString("CheckFileUploadForImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function (s, e) {
        ///    if (s.GetText() == &apos;&apos;) return;
        ///
        ///    var InputFile = s.GetText();
        ///    var extension = new Array();
        ///
        ///    extension[0] = &quot;.png&quot;;
        ///    extension[1] = &quot;.gif&quot;;
        ///    extension[2] = &quot;.jpg&quot;;
        ///    extension[3] = &quot;.jpeg&quot;;
        ///    extension[4] = &quot;.bmp&quot;;
        ///
        ///
        ///    var thisext = InputFile.substr(InputFile.lastIndexOf(&apos;.&apos;)).toLowerCase();
        ///    for (var i = 0; i &lt; extension.length; i++) {
        ///        if (thisext == extension[i]) {
        ///            s.Upload();
        ///            return;
        ///        }
        ///    }
        ///    ale [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CheckFileUploadForImages_UploadWhenOK {
            get {
                return ResourceManager.GetString("CheckFileUploadForImages_UploadWhenOK", resourceCulture);
            }
        }
    }
}
